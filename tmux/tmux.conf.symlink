# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
# set -g status-bg black
# set -g status-fg white
# set -g status-left ""
# set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Highlight active window
set-window-option -g window-status-current-bg red
set-window-option -g mode-keys vi

# auto window rename
set-window-option -g automatic-rename

set -g default-terminal "screen-256color"

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

unbind % # Remove default binding since weâ€™re replacing
bind | split-window -h
bind - split-window -v

unbind-key left   ; bind-key left    resize-pane -L 5
unbind-key right  ; bind-key right   resize-pane -R 5
unbind-key up     ; bind-key up  resize-pane -U 5
unbind-key down   ; bind-key down    resize-pane -D 5

unbind-key >; bind-key >  resize-pane -R 5
unbind-key <; bind-key <  resize-pane -L 5
unbind-key +; bind-key +  resize-pane -U 5

#Vim like buffer copy
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
